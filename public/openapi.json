{
  "openapi": "3.0.0",
  "info": {
    "title": "Tao Ecommerce API",
    "version": "1.0.0",
    "description": "API for Tao Ecommerce application"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter products by category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code for the product information (e.g., 'en', 'zh')",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Creates a new product with its initial, language-specific details.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "featured": {
                    "type": "boolean",
                    "default": false
                  },
                  "category": {
                    "type": "string",
                    "default": "Uncategorized"
                  },
                  "lang": {
                    "type": "string",
                    "default": "en",
                    "description": "Language code for the provided name and description."
                  }
                },
                "required": ["price", "name", "description"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to create product"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code for the product information (e.g., 'en', 'zh')",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "summary": "Update a product",
        "description": "Partially updates a product's details. Allows modification of base fields like price and category, as well as language-specific fields like name and description.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language code for the name/description being updated. Defaults to 'en'.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The product fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The new price of the product."
                  },
                  "featured": {
                    "type": "boolean",
                    "description": "Whether the product is featured."
                  },
                  "category": {
                    "type": "string",
                    "description": "The new category for the product."
                  },
                  "name": {
                    "type": "string",
                    "description": "The new name of the product (language-specific)."
                  },
                  "description": {
                    "type": "string",
                    "description": "The new description of the product (language-specific)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully. Returns the updated product data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID or update data."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Failed to update product."
          }
        }
      }
    },
    "/products/{id}/media": {
      "post": {
        "summary": "Upload media for a product",
        "description": "Uploads one or more media files (images/videos) for a specific product. The system automatically handles de-duplication based on file content.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file to upload. Can be sent multiple times with different keys (e.g., image, image2)."
                  },
                  "video": {
                    "type": "string",
                    "format": "binary",
                    "description": "Video file to upload. Can be sent multiple times with different keys (e.g., video, video2)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Media uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/{productId}/media/reorder": {
      "post": {
        "summary": "Reorder product media",
        "description": "Updates the display order of media assets for a specific product.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product whose media is to be reordered.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mediaIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "An array of media link IDs in the desired display order."
                  }
                },
                "required": ["mediaIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Media reordered successfully. Returns the updated product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID or request body."
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Failed to reorder media."
          }
        }
      }
    },
    "/media/{mediaId}": {
      "delete": {
        "summary": "Delete a product-media link",
        "description": "Deletes the link between a product and a media asset. If the asset becomes orphaned (no other products are using it), the asset itself and the file in R2 will also be deleted.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "description": "ID of the product_media link to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media link deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid media ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Media link not found"
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "summary": "Get all product categories",
        "responses": {
          "200": {
            "description": "A list of product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid registration data"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "summary": "Get user's cart",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User's cart details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cart/items": {
      "post": {
        "summary": "Add item to cart",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added/updated in cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "description": "Invalid cart item data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cart/items/{itemId}": {
      "put": {
        "summary": "Update cart item quantity",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Item updated"
          },
          "400": {
            "description": "Invalid item ID or quantity"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Cart or item not found"
          }
        }
      },
      "delete": {
        "summary": "Remove item from cart",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item removed"
          },
          "400": {
            "description": "Invalid item ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Cart or item not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "featured": {
            "type": "boolean"
          },
          "category": {
            "type": "string",
            "description": "Category of the product"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMedia"
            }
          },
          "lang": {
            "type": "string",
            "description": "Language code for the product information (e.g., 'en', 'zh')"
          }
        },
        "required": ["id", "name", "price", "featured", "category", "media"]
      },
      "ProductMedia": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the link between a product and a media asset."
          },
          "productId": {
            "type": "integer"
          },
          "assetId": {
            "type": "integer"
          },
          "displayOrder": {
            "type": "integer"
          },
          "asset": {
            "$ref": "#/components/schemas/MediaAsset"
          }
        }
      },
      "MediaAsset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "hash": {
            "type": "string",
            "description": "SHA-256 hash of the file content."
          },
          "r2Key": {
            "type": "string",
            "description": "The unique key (filename) in the R2 bucket."
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes."
          },
          "mediaType": {
            "type": "string",
            "enum": ["image", "video"]
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The relative or absolute URL to the asset."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["id", "email"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["email", "password"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "required": ["id", "userId", "createdAt", "updatedAt", "items"]
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/CartProduct"
          }
        },
        "required": ["id", "productId", "quantity", "product"]
      },
      "CartProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "imageUrl": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "AddToCartRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "default": 1
          }
        },
        "required": ["productId"]
      },
      "UpdateCartRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": ["quantity"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}